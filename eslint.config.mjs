export default [
  {
    files: ["**/*.{js,jsx,ts,tsx}"],
    languageOptions: {
      ecmaVersion: 2020,
      sourceType: "module",
      globals: {
        console: "readonly",
        process: "readonly",
        Buffer: "readonly",
        __dirname: "readonly",
        __filename: "readonly",
        global: "readonly",
        module: "readonly",
        require: "readonly",
        exports: "readonly",
        window: "readonly",
        document: "readonly",
        navigator: "readonly",
        localStorage: "readonly",
        sessionStorage: "readonly",
        setTimeout: "readonly",
        clearTimeout: "readonly",
        setInterval: "readonly",
        clearInterval: "readonly",
        fetch: "readonly",
        Request: "readonly",
        Response: "readonly",
        Headers: "readonly",
        URL: "readonly",
        URLSearchParams: "readonly",
        FormData: "readonly",
        File: "readonly",
        FileReader: "readonly",
        Blob: "readonly",
        ArrayBuffer: "readonly",
        Uint8Array: "readonly",
        Int8Array: "readonly",
        Uint16Array: "readonly",
        Int16Array: "readonly",
        Uint32Array: "readonly",
        Int32Array: "readonly",
        Float32Array: "readonly",
        Float64Array: "readonly",
        DataView: "readonly",
        Map: "readonly",
        Set: "readonly",
        WeakMap: "readonly",
        WeakSet: "readonly",
        Proxy: "readonly",
        Reflect: "readonly",
        Promise: "readonly",
        Symbol: "readonly",
        Generator: "readonly",
        GeneratorFunction: "readonly",
        AsyncFunction: "readonly",
        AsyncGenerator: "readonly",
        AsyncGeneratorFunction: "readonly",
        Error: "readonly",
        EvalError: "readonly",
        RangeError: "readonly",
        ReferenceError: "readonly",
        SyntaxError: "readonly",
        TypeError: "readonly",
        URIError: "readonly",
        JSON: "readonly",
        Math: "readonly",
        Date: "readonly",
        RegExp: "readonly",
        Function: "readonly",
        Object: "readonly",
        Array: "readonly",
        String: "readonly",
        Boolean: "readonly",
        Number: "readonly",
        Infinity: "readonly",
        NaN: "readonly",
        undefined: "readonly",
        null: "readonly",
        true: "readonly",
        false: "readonly",
        arguments: "readonly",
        this: "readonly",
        super: "readonly",
        new: "readonly",
        delete: "readonly",
        typeof: "readonly",
        void: "readonly",
        in: "readonly",
        instanceof: "readonly",
        yield: "readonly",
        await: "readonly",
        class: "readonly",
        const: "readonly",
        debugger: "readonly",
        default: "readonly",
        export: "readonly",
        extends: "readonly",
        finally: "readonly",
        function: "readonly",
        import: "readonly",
        let: "readonly",
        return: "readonly",
        static: "readonly",
        throw: "readonly",
        try: "readonly",
        var: "readonly",
        with: "readonly",
        enum: "readonly",
        implements: "readonly",
        interface: "readonly",
        package: "readonly",
        private: "readonly",
        protected: "readonly",
        public: "readonly",
        abstract: "readonly",
        boolean: "readonly",
        byte: "readonly",
        char: "readonly",
        double: "readonly",
        final: "readonly",
        float: "readonly",
        goto: "readonly",
        int: "readonly",
        long: "readonly",
        native: "readonly",
        short: "readonly",
        synchronized: "readonly",
        throws: "readonly",
        transient: "readonly",
        volatile: "readonly",
        React: "readonly",
        JSX: "readonly",
      },
    },
    rules: {
      "no-unused-vars": "warn",
      "no-console": "warn",
    },
  },
];
