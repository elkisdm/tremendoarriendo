{
  "timestamp": "2025-08-12T12:34:01.541Z",
  "baseUrl": "http://localhost:3000",
  "sections": {
    "qaLocal": {
      "lint": {
        "exitCode": 2,
        "summary": "FAIL",
        "output": "\n> hommie-0-commission@1.0.0 lint\n> eslint . --ext .ts,.tsx,.js,.jsx,.mjs,.cjs --report-unused-disable-directives --max-warnings=0\n\n"
      },
      "types": {
        "exitCode": 0,
        "summary": "PASS",
        "output": ""
      },
      "tests": {
        "exitCode": 1,
        "summary": "FAIL",
        "output": "ts-jest[config] (WARN) \n    The \"ts-jest\" config option \"isolatedModules\" is deprecated and will be removed in v30.0.0. Please use \"isolatedModules: true\" in /Users/macbookpro/Documents/hommie-0-commission-next/tsconfig.jest.json instead, see https://www.typescriptlang.org/tsconfig/#isolatedModules\n  \nFAIL tests/unit/waitlistModal.test.tsx\n  ● Console\n\n    console.error\n      Warning: Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwa..."
      },
      "build": {
        "exitCode": 0,
        "summary": "PASS",
        "output": "\n> hommie-0-commission@1.0.0 build\n> next build\n\n  ▲ Next.js 14.2.5\n  - Environments: .env.local\n\n   Creating an optimized production build ...\n ✓ Compiled successfully\n   Linting and checking validity of types ...\n   Collecting page data ...\n   Generating static pages (0/16) ...\n   Generating static pages (4/16) \r\n🚀 Función readAll() iniciada\n🔧 USE_SUPABASE: false\n📄 Usando datos mock como fallback\n📄 Retornando 5 edificios mock\n   Generating static pages (8/16) \r\n   Generating static pages (..."
      }
    },
    "pageChecks": {
      "root": {
        "statusCode": 500,
        "isRedirect": false,
        "summary": "FAIL"
      },
      "comingSoon": {
        "statusCode": 500,
        "hasTitle": false,
        "hasNoIndex": false,
        "summary": "FAIL"
      },
      "landing": {
        "statusCode": 200,
        "hasTitle": true,
        "hasOgTitle": false,
        "summary": "FAIL"
      },
      "property": {
        "statusCode": 500,
        "hasTitle": false,
        "hasJsonLd": false,
        "summary": "NO_APPLY"
      }
    },
    "jsonLdSecurity": {
      "propertyPage": {
        "hasDangerouslySetInnerHTML": false,
        "hasSafeJsonLd": true,
        "hasScriptJsonLd": true,
        "summary": "PASS"
      },
      "jsonLdUtil": {
        "exists": true,
        "hasSafeJsonLd": true,
        "hasEscapeFunction": true,
        "summary": "PASS"
      }
    },
    "rateLimit": {
      "rateLimit": {
        "routesExist": true,
        "targetRoute": "/api/test",
        "responses": [
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          200,
          429,
          429,
          429,
          429,
          429
        ],
        "has429": true,
        "summary": "PASS"
      }
    },
    "seoAndRobots": {
      "robots": {
        "statusCode": 200,
        "content": "User-Agent: *\nDisallow: /\n\n",
        "hasDisallowAll": true,
        "hasAllowRoot": false,
        "summary": "PASS"
      },
      "canonical": {
        "rootHasCanonical": false,
        "landingHasCanonical": false,
        "summary": "FAIL"
      }
    }
  },
  "summary": {
    "lint": "FAIL",
    "types": "PASS",
    "tests": "FAIL",
    "build": "PASS",
    "rootCheck": "FAIL",
    "seoRobot": "PASS"
  },
  "decision": "NO-GO"
}